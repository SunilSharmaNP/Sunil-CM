# Enhanced Docker Compose Configuration
# Complete deployment setup for Enhanced MERGE-BOT with all services

version: '3.8'

services:
  # ===== MAIN BOT SERVICE =====
  enhanced-merge-bot:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_DEPS=build-essential wget curl git
    container_name: enhanced-merge-bot
    restart: unless-stopped
    
    # Environment configuration
    env_file:
      - config.env
    environment:
      - DATABASE_URL=mongodb://root:password@mongodb:27017/mergebot?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - TZ=UTC
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # Volume mounts for persistence
    volumes:
      - ./downloads:/app/downloads
      - ./logs:/app/logs
      - ./cache:/app/cache
      - ./backups:/app/backups
      - ./config.env:/app/config.env:ro
    
    # Port mapping (for webhook mode)
    ports:
      - "8080:8080"
    
    # Dependencies
    depends_on:
      - mongodb
      - redis
    
    # Networks
    networks:
      - bot-network
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ===== MONGODB DATABASE =====
  mongodb:
    image: mongo:6.0
    container_name: enhanced-merge-bot-db
    restart: unless-stopped
    
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: mergebot
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    
    # Persistent storage
    volumes:
      - mongodb_data:/data/db
    
    # Port (for external access if needed)
    ports:
      - "27017:27017"
    
    networks:
      - bot-network
    
    # Health check
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ===== REDIS CACHE =====
  redis:
    image: redis:7-alpine
    container_name: enhanced-merge-bot-redis
    restart: unless-stopped
    
    # Redis configuration
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.2'
    
    # Persistent storage
    volumes:
      - redis_data:/data
    
    # Port (for external access if needed)
    ports:
      - "6379:6379"
    
    networks:
      - bot-network
    
    # Health check
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

# ===== VOLUMES =====
volumes:
  mongodb_data:
    driver: local
  
  redis_data:
    driver: local

# ===== NETWORKS =====
networks:
  bot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
